<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="MealPlannerTests" tests="1" skipped="0" failures="1" errors="0" timestamp="2024-12-17T09:17:30" hostname="HAL955" time="1.61">
  <properties/>
  <testcase name="start" classname="MealPlannerTests" time="1.61">
    <failure message="java.lang.AssertionError: Wrong answer in test #4&#10;&#10;Wrong output for a category with no added meals.&#10;&#10;Please find below the output of your program during this failed test.&#10;Note that the '&gt;' character indicates the beginning of the input line.&#10;&#10;---&#10;&#10;What would you like to do (add, show, plan, list plan, save, exit)?&#10;&gt; show&#10;Which category do you want to print (breakfast, lunch, dinner)?&#10;&gt; lunch&#10;&#10;Category: lunch&#10;&#10;Name: sushi&#10;Ingredients:&#10;salmon&#10;rice&#10;avocado&#10;&#10;Name: omelette&#10;Ingredients:&#10;eggs&#10;milk&#10;cheese&#10;&#10;What would you like to do (add, show, plan, list plan, save, exit)?&#10;&gt; show&#10;Which category do you want to print (breakfast, lunch, dinner)?&#10;&gt; breakfast&#10;&#10;Category: breakfast&#10;&#10;Name: oatmeal&#10;Ingredients:&#10;oats&#10;milk&#10;banana&#10;peanut butter&#10;&#10;What would you like to do (add, show, plan, list plan, save, exit)?&#10;&gt; show&#10;Which category do you want to print (breakfast, lunch, dinner)?&#10;&gt; brunch&#10;Wrong meal category! Choose from: breakfast, lunch, dinner.&#10;What would you like to do (add, show, plan, list plan, save, exit)?&#10;&gt; dinner&#10;What would you like to do (add, show, plan, list plan, save, exit)?" type="java.lang.AssertionError">java.lang.AssertionError: Wrong answer in test #4

Wrong output for a category with no added meals.

Please find below the output of your program during this failed test.
Note that the '&gt;' character indicates the beginning of the input line.

---

What would you like to do (add, show, plan, list plan, save, exit)?
&gt; show
Which category do you want to print (breakfast, lunch, dinner)?
&gt; lunch

Category: lunch

Name: sushi
Ingredients:
salmon
rice
avocado

Name: omelette
Ingredients:
eggs
milk
cheese

What would you like to do (add, show, plan, list plan, save, exit)?
&gt; show
Which category do you want to print (breakfast, lunch, dinner)?
&gt; breakfast

Category: breakfast

Name: oatmeal
Ingredients:
oats
milk
banana
peanut butter

What would you like to do (add, show, plan, list plan, save, exit)?
&gt; show
Which category do you want to print (breakfast, lunch, dinner)?
&gt; brunch
Wrong meal category! Choose from: breakfast, lunch, dinner.
What would you like to do (add, show, plan, list plan, save, exit)?
&gt; dinner
What would you like to do (add, show, plan, list plan, save, exit)?
	at org.junit.Assert.fail(Assert.java:89)
	at org.hyperskill.hstest.stage.StageTest.start(StageTest.java:208)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:112)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:40)
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:60)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:52)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$2.run(TestWorker.java:176)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
</failure>
  </testcase>
  <system-out><![CDATA[?[1;31m
Start test 1?[0m
What would you like to do (add, show, plan, list plan, save, exit)?
> save
Unable to save. Plan your meals first.
What would you like to do (add, show, plan, list plan, save, exit)?
> exit
Bye!
?[1;31m
Start test 2?[0m
What would you like to do (add, show, plan, list plan, save, exit)?
> exit
Bye!
?[1;31m
Start test 3?[0m
What would you like to do (add, show, plan, list plan, save, exit)?
> add
Which meal do you want to add (breakfast, lunch, dinner)?
> lunch
Input the meal's name:
> sushi
Input the ingredients:
> salmon, rice, avocado
The meal has been added!
What would you like to do (add, show, plan, list plan, save, exit)?
> add
Which meal do you want to add (breakfast, lunch, dinner)?
> lunch
Input the meal's name:
> omelette
Input the ingredients:
> eggs, milk, cheese
The meal has been added!
What would you like to do (add, show, plan, list plan, save, exit)?
> add
Which meal do you want to add (breakfast, lunch, dinner)?
> breakfast
Input the meal's name:
> oatmeal
Input the ingredients:
> oats, milk, banana, peanut butter
The meal has been added!
What would you like to do (add, show, plan, list plan, save, exit)?
> show
Which category do you want to print (breakfast, lunch, dinner)?
> lunch

Category: lunch

Name: sushi
Ingredients:
salmon
rice
avocado

Name: omelette
Ingredients:
eggs
milk
cheese

What would you like to do (add, show, plan, list plan, save, exit)?
> show
Which category do you want to print (breakfast, lunch, dinner)?
> breakfast

Category: breakfast

Name: oatmeal
Ingredients:
oats
milk
banana
peanut butter

What would you like to do (add, show, plan, list plan, save, exit)?
> exit
Bye!
?[1;31m
Start test 4?[0m
What would you like to do (add, show, plan, list plan, save, exit)?
> show
Which category do you want to print (breakfast, lunch, dinner)?
> lunch

Category: lunch

Name: sushi
Ingredients:
salmon
rice
avocado

Name: omelette
Ingredients:
eggs
milk
cheese

What would you like to do (add, show, plan, list plan, save, exit)?
> show
Which category do you want to print (breakfast, lunch, dinner)?
> breakfast

Category: breakfast

Name: oatmeal
Ingredients:
oats
milk
banana
peanut butter

What would you like to do (add, show, plan, list plan, save, exit)?
> show
Which category do you want to print (breakfast, lunch, dinner)?
> brunch
Wrong meal category! Choose from: breakfast, lunch, dinner.
What would you like to do (add, show, plan, list plan, save, exit)?
> dinner
What would you like to do (add, show, plan, list plan, save, exit)?
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
